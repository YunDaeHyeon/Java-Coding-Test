package designpattern.factory.chapter1;

/*
    Factory Method Pattern
     : 객체 생성을 직접 하지 않고 누군가에게 맡기고 싶을 때
      개요
     - 객체지향 언어를 사용하면 클래스에서 다른 클래스의 새로운 객체를 만들 때 두 클래스 사이에는
     의존 관계 발생
     - 서로 간에 강한 결합을 이루게 되고 변경에 따른 영향을 받아 코드의 유연한 확장이나 변경 같은
     유지보수를 어렵게 만듦
     - 필요한 객체를 클래스에서 생성하지 말고 객체 생성만 전문으로 하는 클래스를 만들어
     객체를 모두 생성해 해결
      단계
     1단계 : 객체 생성을 담당하는 factory 클래스를 만들어 그곳에서 객체를 생성
     2단계 : 객체를 생성할 수 있는 메소드를 만들어 그 메소드가 factory 클래스 역할을 하도록 한다.
            그 뒤, factory 클래스는 삭제한다.
      이해
     - 게임 서버는 게임의 종류가 늘어날 때 마다 추가
     - 하나의 게임을 선택하면 게임 서버는 '정상 연결' 메세지와 함께 게임 명, 게임 버전,
     게임 실행 완료 메세지를 화면에 출력
     - 추후에는 게임 서버도 국가별로 별도로 둘 예정이며 게임도 그 나라의 특성에 맞는 게임으로
     수정할 예정
 */
public class Main {
}
